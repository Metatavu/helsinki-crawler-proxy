name: Publish Docker image

on:
  push:
    branches:
      - develop
      - ssl

env:
  REGISTRY: ghcr.io
  GITHUB_REPOSITORY: ${{ github.repository }}

jobs:
  build-and-push-image:
    environment: develop
    runs-on: ubuntu-latest    
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Setup gcloud auth'
        id: 'gcloud-auth'
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.GCLOUD_WORKER_IDENTITY_PROVIDER }}

      - name: 'Use gcloud CLI'
        env:
          GCLOUD_SSH_PRIVATE_KEY: ${{ secrets.GCLOUD_SSH_PRIVATE_KEY }}
        run: 'mkdir -p ~/.ssh && echo $GCLOUD_SSH_PRIVATE_KEY > ~/.ssh/google_compute_engine && gcloud compute ssh ${{ secrets.GCLOUD_INSTANCE_NAME }} --zone ${{ secrets.GCLOUD_ZONE }} --project=${{ secrets.GCLOUD_PROJECT_ID }} --command "tail -f /dev/null" -- -L 6443:localhost:6443 &'

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: get pods

      - name: 'Set up gcloud CLI'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Test gcloud CLI'
        run: 'gcloud info'

      - name: Resolve docker image name
        id: image_name
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY@L}" >> $GITHUB_OUTPUT
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.image_name.outputs.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}